// generated with ast extension for cup
// version 0.8
// 20/0/2020 15:45:3


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(OptionalNumConst OptionalNumConst);
    public void visit(OptionalBracesMethodDeclList OptionalBracesMethodDeclList);
    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(Var Var);
    public void visit(OptionalBracketsExpr OptionalBracketsExpr);
    public void visit(DesignatorAction DesignatorAction);
    public void visit(OptionalBrackets OptionalBrackets);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(MethodAbstractMethodDeclList MethodAbstractMethodDeclList);
    public void visit(Factor Factor);
    public void visit(FormParameter FormParameter);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(AbstractMethodDecl AbstractMethodDecl);
    public void visit(ConstList ConstList);
    public void visit(DeclList DeclList);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(Condition Condition);
    public void visit(AddopTerms AddopTerms);
    public void visit(OptionalBracesMethodAbstractMethodDeclList OptionalBracesMethodAbstractMethodDeclList);
    public void visit(MulopFactors MulopFactors);
    public void visit(OptionalFormPars OptionalFormPars);
    public void visit(ClassExtendsError ClassExtendsError);
    public void visit(VarDeclList VarDeclList);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(OptionalRelopExpr OptionalRelopExpr);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(AbstractClassDecl AbstractClassDecl);
    public void visit(DesignatorDotIndex DesignatorDotIndex);
    public void visit(OptionalCondition OptionalCondition);
    public void visit(Const Const);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(Decl Decl);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(Statement Statement);
    public void visit(MethodAbstractMethodDecl MethodAbstractMethodDecl);
    public void visit(OptionalElseStatement OptionalElseStatement);
    public void visit(ClassDecl ClassDecl);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptionalExtendsType OptionalExtendsType);
    public void visit(OptionalParenthesesActPars OptionalParenthesesActPars);
    public void visit(OptionalMinus OptionalMinus);
    public void visit(FormPars FormPars);
    public void visit(OptionalMethodDeclList OptionalMethodDeclList);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDivide MulopDivide);
    public void visit(MulopMultiply MulopMultiply);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEqual RelopLessEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterEqual RelopGreaterEqual);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqualEqual RelopEqualEqual);
    public void visit(Assignop Assignop);
    public void visit(DesignatorIndex DesignatorIndex);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(NoDesigList NoDesigList);
    public void visit(DesigList DesigList);
    public void visit(Designator Designator);
    public void visit(NoOptionalBracketsExpression NoOptionalBracketsExpression);
    public void visit(OptionalBracketsExpression OptionalBracketsExpression);
    public void visit(NoOptionalParenthesesActualPars NoOptionalParenthesesActualPars);
    public void visit(OptionalParenthesesActualPars OptionalParenthesesActualPars);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(NoMultiplyopFactors NoMultiplyopFactors);
    public void visit(MultiplyopFactors MultiplyopFactors);
    public void visit(Term Term);
    public void visit(NoAddopTerminals NoAddopTerminals);
    public void visit(AddopTerminals AddopTerminals);
    public void visit(NoOptMinus NoOptMinus);
    public void visit(OptMinus OptMinus);
    public void visit(Expr Expr);
    public void visit(NoOptionalRelopExpression NoOptionalRelopExpression);
    public void visit(OptionalRelopExpression OptionalRelopExpression);
    public void visit(CondFact CondFact);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(CondTermList CondTermList);
    public void visit(ConditionSingle ConditionSingle);
    public void visit(ConditionList ConditionList);
    public void visit(ActParam ActParam);
    public void visit(ActParams ActParams);
    public void visit(NoOptionalActualParams NoOptionalActualParams);
    public void visit(OptionalActualParams OptionalActualParams);
    public void visit(DesignatorActionMinusMinus DesignatorActionMinusMinus);
    public void visit(DesignatorActionPlusPlus DesignatorActionPlusPlus);
    public void visit(DesignatorActionCallMethod DesignatorActionCallMethod);
    public void visit(DesignatorActionAssign DesignatorActionAssign);
    public void visit(DesignatorAssignopError DesignatorAssignopError);
    public void visit(DesignatorStatementNoError DesignatorStatementNoError);
    public void visit(NoOptionalNumberConst NoOptionalNumberConst);
    public void visit(OptionalNumberConst OptionalNumberConst);
    public void visit(NoOptionalExpression NoOptionalExpression);
    public void visit(OptionalExpression OptionalExpression);
    public void visit(ConditionError ConditionError);
    public void visit(NoOptionalCond NoOptionalCond);
    public void visit(OptionalCond OptionalCond);
    public void visit(NoOptionalDesigStatement NoOptionalDesigStatement);
    public void visit(OptionalDesigStatement OptionalDesigStatement);
    public void visit(ElseStatement ElseStatement);
    public void visit(NoOptionalElseStmt NoOptionalElseStmt);
    public void visit(OptionalElseStmt OptionalElseStmt);
    public void visit(NestedStmt NestedStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(ReturnStmt ReturnStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(ForStmt ForStmt);
    public void visit(IfStmt IfStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(Type Type);
    public void visit(FormalParamaterError FormalParamaterError);
    public void visit(FormalParameter FormalParameter);
    public void visit(FormParam FormParam);
    public void visit(FormParams FormParams);
    public void visit(AbstractMethodDeclarationError AbstractMethodDeclarationError);
    public void visit(AbstractMethodDeclaration AbstractMethodDeclaration);
    public void visit(NoStmtList NoStmtList);
    public void visit(StmtList StmtList);
    public void visit(NoOptionalFormParams NoOptionalFormParams);
    public void visit(OptionalFormParams OptionalFormParams);
    public void visit(VoidMethodRetType VoidMethodRetType);
    public void visit(MethodRetType MethodRetType);
    public void visit(MethodDecl MethodDecl);
    public void visit(AbstractMethodDeclar AbstractMethodDeclar);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodAbstractMethodDeclarationList NoMethodAbstractMethodDeclarationList);
    public void visit(MethodAbstractMethodDeclarationList MethodAbstractMethodDeclarationList);
    public void visit(NoOptionalBracesMethodAbstractMethodDeclarationList NoOptionalBracesMethodAbstractMethodDeclarationList);
    public void visit(OptionalBracesMethodAbstractMethodDeclarationList OptionalBracesMethodAbstractMethodDeclarationList);
    public void visit(AbstractClassDeclarat AbstractClassDeclarat);
    public void visit(NoOptionalBracesMethodDeclarationList NoOptionalBracesMethodDeclarationList);
    public void visit(OptionalBracesMethodDeclarationList OptionalBracesMethodDeclarationList);
    public void visit(NoVarDeclarationList NoVarDeclarationList);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(NoOptExtendsType NoOptExtendsType);
    public void visit(OptExtendsType OptExtendsType);
    public void visit(NoClassExtendsError NoClassExtendsError);
    public void visit(ClassExtendsErrorExists ClassExtendsErrorExists);
    public void visit(ClassDeclarat ClassDeclarat);
    public void visit(NoBrackets NoBrackets);
    public void visit(Brackets Brackets);
    public void visit(VarError VarError);
    public void visit(Variab Variab);
    public void visit(Variable Variable);
    public void visit(VariableList VariableList);
    public void visit(VarDecl VarDecl);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstSingle ConstSingle);
    public void visit(ConstsList ConstsList);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoMethodDeclarationList NoMethodDeclarationList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(AbstractClassDeclaration AbstractClassDeclaration);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDeclarationList NoDeclarationList);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
